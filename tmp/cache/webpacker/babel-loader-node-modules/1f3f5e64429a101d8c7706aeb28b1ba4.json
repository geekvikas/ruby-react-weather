{"ast":null,"code":"var _jsxFileName = \"/Users/vikas/dev/interviews/onesignal/ruby-react-weather/app/javascript/components/Weather.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport WeatherWidget from \"./WeatherWidget\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, AppBar, Toolbar, IconButton, MenuIcon, Typography, Button } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    location: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\"\n    },\n    widgetContainer: {\n      fontSize: 14\n    }\n  };\n});\nexport default function Weather() {\n  var classes = useStyles();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      weather = _useState2[0],\n      setWeather = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var mockAPI = require(\"./mockapi.json\");\n\n  useEffect(function () {\n    var geo = navigator.geolocation;\n\n    if (!geo) {\n      setError(\"Geolocation is not supported\");\n      return;\n    }\n\n    var watcher = geo.watchPosition(onChange, onError);\n    return function () {\n      return geo.clearWatch(watcher);\n    };\n  }, []);\n\n  var onChange = function onChange(_ref) {\n    var coords = _ref.coords;\n\n    if (coords) {\n      var lat = coords.latitude;\n      var lon = coords.longitude; // We should load this from ENV variable\n\n      var API_KEY = \"f513eb8ca9bc54afc9773da7aeaaa41f\";\n      var apiUrl = \"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(lat, \"&lon=\").concat(lon, \"&appid=\").concat(API_KEY);\n      fetch(apiUrl).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.cod == 200) setWeather(data);else setWeather(mockAPI);\n      });\n    }\n  };\n\n  var onError = function onError(error) {\n    setError(error.message);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"News\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Weather App\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Location: \", error ? error : weather.name || \"Fetching...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.widgetContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, weather.name && /*#__PURE__*/React.createElement(WeatherWidget, {\n    data: weather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/vikas/dev/interviews/onesignal/ruby-react-weather/app/javascript/components/Weather.jsx"],"names":["React","useState","useEffect","Link","WeatherWidget","makeStyles","Container","AppBar","Toolbar","IconButton","MenuIcon","Typography","Button","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","location","display","margin","transform","widgetContainer","fontSize","Weather","classes","weather","setWeather","error","setError","mockAPI","require","geo","navigator","geolocation","watcher","watchPosition","onChange","onError","clearWatch","coords","lat","latitude","lon","longitude","API_KEY","apiUrl","fetch","then","response","json","data","cod","message","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport WeatherWidget from \"./WeatherWidget\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container,AppBar,Toolbar,IconButton,MenuIcon,Typography,Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  location: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  widgetContainer: {\n    fontSize: 14,\n  },\n}));\n\nexport default function Weather() {\n  const classes = useStyles();\n  const [weather, setWeather] = useState({});\n  const [error, setError] = useState(null);\n  const mockAPI = require(\"./mockapi.json\");\n  useEffect(() => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      setError(\"Geolocation is not supported\");\n      return;\n    }\n    const watcher = geo.watchPosition(onChange, onError);\n    return () => geo.clearWatch(watcher);\n  }, []);\n\n  const onChange = ({ coords }) => {\n    if (coords) {\n      const lat = coords.latitude;\n      const lon = coords.longitude;\n\n      // We should load this from ENV variable\n      const API_KEY = \"f513eb8ca9bc54afc9773da7aeaaa41f\";\n\n      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}`;\n\n      fetch(apiUrl)\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.cod == 200) setWeather(data);\n          else setWeather(mockAPI);\n        });\n    }\n  };\n\n  const onError = (error) => {\n    setError(error.message);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            News\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.title}>Weather App</div>\n      <div className={classes.location}>\n        Location: {error ? error : weather.name || \"Fetching...\"}\n      </div>\n      <div className={classes.widgetContainer}>\n        {weather.name && <WeatherWidget data={weather} />}\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}