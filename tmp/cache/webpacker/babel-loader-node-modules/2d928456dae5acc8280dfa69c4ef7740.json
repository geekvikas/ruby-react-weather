{"ast":null,"code":"var _jsxFileName = \"/Users/vikas/dev/interviews/onesignal/ruby-react-weather/app/javascript/components/Weather.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { usePosition } from \"./GeoLocation\";\nexport default function Weather() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _usePosition = usePosition(),\n      latitude = _usePosition.latitude,\n      longitude = _usePosition.longitude,\n      timestamp = _usePosition.timestamp,\n      accuracy = _usePosition.accuracy,\n      error = _usePosition.error;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Weather App\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Location: \", error ? error : \"\".concat(latitude || 'Fetching', \", \").concat(longitude || 'Fetching')));\n}","map":{"version":3,"sources":["/Users/vikas/dev/interviews/onesignal/ruby-react-weather/app/javascript/components/Weather.jsx"],"names":["React","useState","Link","usePosition","Weather","location","setLocation","latitude","longitude","timestamp","accuracy","error"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA,kBACAH,QAAQ,EADR;AAAA;AAAA,MACzBI,QADyB;AAAA,MACfC,WADe;;AAAA,qBAG4BH,WAAW,EAHvC;AAAA,MAGxBI,QAHwB,gBAGxBA,QAHwB;AAAA,MAGdC,SAHc,gBAGdA,SAHc;AAAA,MAGHC,SAHG,gBAGHA,SAHG;AAAA,MAGQC,QAHR,gBAGQA,QAHR;AAAA,MAGkBC,KAHlB,gBAGkBA,KAHlB;;AAKhC,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqCA,KAAK,GAACA,KAAD,aAAWJ,QAAQ,IAAI,UAAvB,eAAsCC,SAAS,IAAI,UAAnD,CAA1C,CAFF,CADF;AAMD","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { usePosition } from \"./GeoLocation\";\n\nexport default function Weather() {\n  const [location, setLocation] = useState();\n\n  const { latitude, longitude, timestamp, accuracy, error } = usePosition();\n\n  return (\n    <div>\n      <div className=\"title\">Weather App</div>\n      <div className=\"location\">Location: {error?error: `${latitude || 'Fetching'}, ${longitude || 'Fetching'}`}</div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}